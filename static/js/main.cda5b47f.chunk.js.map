{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","preparedTodos","todosFromServer","usersFromServer","findedUser","find","useState","visibleTodos","setVisbleTodos","titleValue","setTitleValue","setUserId","isUserError","setIsUserError","isTitleError","setIsTitleError","action","method","onSubmit","event","preventDefault","newId","sort","idA","idB","prevTodos","type","placeholder","value","onChange","target","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cda5b47f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","type Props = {\n  user?: {\n    id: number,\n    name: string,\n    username: string,\n    email: string\n  }\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { PreparedTodo } from '../types/preparedTodo';\n\ntype Props = {\n  todo: PreparedTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      key={todo.id}\n      data-id={`${todo.id}`}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { PreparedTodo } from '../types/preparedTodo';\n\ntype Props = {\n  todos: PreparedTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: PreparedTodo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { PreparedTodo } from './components/types/preparedTodo';\n\ntype PrepareFunc = () => PreparedTodo[];\n\nexport const App = () => {\n  const prepareTodos: PrepareFunc = () => {\n    if (!todosFromServer || !usersFromServer) {\n      return [];\n    }\n\n    const todosWithUserField = todosFromServer.map((todo) => {\n      const findedUser = usersFromServer\n        .find((user) => todo.userId === user.id);\n\n      return {\n        ...todo,\n        user: findedUser,\n      };\n    });\n\n    return todosWithUserField;\n  };\n\n  const preparedTodos = prepareTodos();\n\n  const [visibleTodos, setVisbleTodos] = useState(preparedTodos);\n  const [titleValue, setTitleValue] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isUserError, setIsUserError] = useState(false);\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsTitleError(!titleValue);\n    setIsUserError(!userId);\n\n    const newId = visibleTodos.map(todo => todo.id)\n      .sort((idA, idB) => idB - idA)[0] + 1;\n\n    if (userId && titleValue) {\n      setVisbleTodos(prevTodos => [...prevTodos, {\n        id: newId,\n        title: titleValue,\n        completed: false,\n        userId,\n        user: usersFromServer.find((user) => user.id === userId),\n      }]);\n\n      setUserId(0);\n      setTitleValue('');\n    }\n\n    if (isUserError) {\n      setUserId(0);\n    }\n\n    if (isTitleError) {\n      setTitleValue('');\n    }\n  };\n\n  const selectHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={titleValue}\n            onChange={(event) => {\n              setTitleValue(event.target.value);\n              setIsTitleError(false);\n            }}\n          />\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={selectHandler}\n          >\n            <option value=\"0\" selected disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}